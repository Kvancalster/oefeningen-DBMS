Exercise slide 42
	show model organisms full name (as one column): genus + species

		MariaDB [biodb]> select concat(genus," ",species) FROM modorg;

	Genome size (as Gb, standard: Mb), rounded to 4 digits
		[ note: standard in Mb (how in original table) show it in Gb
									1000 Mb = 1 Gb --> gsize/1000 ]
		MariaDB [biodb]> SELECT concat(genus, " ", species), round(gsize/1000,4) FROM modorg;
	Average chromosome size per organism
		MariaDB [MariaDB [biodb]> select concat(genus, " ", species),round(gsize/1000,4), gsize/nchr FROM modorg;
	Publication year (draft contains a date, need to extract the year with a function)
		MariaDB [biodb]> select concat(genus, " ", species),round(gsize/1000,4), gsize/nchr,year(draft) FROM modorg;
	sort by average chromosome size, largest on top
		MariaDB [biodb]> SELECT concat(genus, " ", species), round(gsize/1000,4), gsize/nchr, year(draft) FROM modorg ORDER BY gsize/nchr desc;
	COMPLETE + USE OF ALIAS
		MariaDB [biodb]> SELECT concat(genus, " ", species) as species, round(gsize/1000,4) as gsizeGb, gsize/nchr as avgChrSize, year(draft) FROM modorg ORDER BY avgChrSize desc;

Exercise slide 50
	Select all mammals with genomes published after 2005
		MariaDB [biodb]> SELECT * FROM modorg WHERE class="mammals" AND year(draft) > 2005;
	Select all organisms that have an average chromosome size between 10 and 100 Mbp
		MariaDB [biodb]> SELECT genus,species,gsize/nchr as avgChrSize FROM modorg WHERE gsize/nchr BETWEEN 10 AND 100;
	Select all organisms whose genus starts with A, B, C, D or E
		MariaDB [biodb]> SELECT * FROM modorg WHERE genus <"F" AND genus >= "A";
		MariaDB [biodb]> SELECT * FROM modorg WHERE genus LIKE "a%" OR genus LIKE "b%" OR genus LIKE "C%" OR genus LIKE "d%" OR genus LIKE "e%";
		MariaDB [biodb]> SELECT * FROM modorg WHERE genus rlike "^[A-E]+";

Exercise slide 53
	Give an overview of all (unique) organism CLASSES in the dataset (sorted alphabetically)
		MariaDB [biodb]> SELECT DISTINCT class FROM modorg ORDER by class;
	Show the organism names of the top 3 largest genome sizes
		MariaDB [biodb]> SELECT concat(genus, " ", species)as orgName,gsize FROM modorg ORDER BY gsize desc LIMIT 3;
	Show the organism names of the top 3 smallest genome sizes, not showing NULL values
		MariaDB [biodb]> SELECT concat(genus, " ", species)as orgName,gsize FROM modorg WHERE gsize IS NOT NULL ORDER BY gsize LIMIT 3;

Exercise slide 58
	How many organisms are present in the dataset for each class?
		MariaDB [biodb]> SELECT class,count(*) FROM modorg GROUP BY class; count(*) will count each of the buckets/groups how many rows are in there
		MariaDB [biodb]> SELECT class,count(class) FROM modorg GROUP BY class; (same result, mssh niet beste idee)
	Show the minimum and maximum genome sizes for each classTake only the organisms into account for which the sizes are known. Sort the results such that the biggest maximum genome size is on top
		MariaDB [biodb]> SELECT class,min(gsize),max(gsize) FROM modorg WHERE gsize IS NOT NULL GROUP BY class ORDER BY max(gsize) desc;
		MariaDB [biodb]> SELECT class,min(gsize) as min_gsize,max(gsize) as max_gsize FROM modorg WHERE gsize IS NOT NULL GROUP BY class ORDER BY max_gsize desc;
		note: you can use aliasses in ORDER BY, NOT in WHERE

Exercise slide 60
	Show the minimum and maximum genome sizes for each class.
	Take only the organisms into account for which the sizes are known.
	Sort the results such that the biggest maximum genome size is on top
	=> Show only the results where the minimum genome size >= 100 and maximum genome size < 1000
		MariaDB [biodb]> SELECT class,min(gsize) as minGsize,max(gsize) as maxGsize FROM modorg WHERE gsize IS NOT NULL GROUP BY class HAVING minGsize >=100 AND maxGsize < 1000 ORDER BY maxGsize desc;

Exercise slide 63
	For each class with more than 1 organism, show the average number of chromosomes
	Sort the result such that the biggest average is on top
		MariaDB [biodb]> SELECT class,count(*) as nr_org, avg(nchr) as avgNrChr FROM modorg GROUP BY class HAVING nr_org > 1 ORDER BY avgNrChr desc;
	note you dont have to show the count!
		MariaDB [biodb]> SELECT class, avg(nchr) as avgNrChr FROM modorg GROUP BY class HAVING count(*) > 1 ORDER BY avgNrChr desc;

exercise slide 65 (Bioinf_testdb)
	1) Find the gene named HOTAIR in the gene table
	In addition to the name and chromosomal position, return the size of the gene
		MariaDB [bioinf_testdb]> SELECT gene_name, seq_region_start, seq_region_end,(seq_region_end - seq_region_start +1) as geneSize  FROM gene WHERE gene_name="HOTAIR";
	2)Find the known lincRNA that is located the most distal on the p-arm of chromosome 14 (see figure for a hint)
		MariaDB [bioinf_testdb]> SELECT biotype,status,chromosome, seq_region_start, seq_region_end  FROM gene WHERE biotype="lincRNA" AND status="known" AND
 chromosome=14;
	3) Find genes related to prostate cancer (use description field)
		MariaDB [bioinf_testdb]> select gene_name, description  from gene where description like "%prostate%cancer%" limit 10;
	% in between prostate and cancer otherwise it will only look for "prostate cancer", it will ommit the result "prostate and breast cancer"
	4) Return a list of genes located on chromosome X in alphabetical order
		MariaDB [bioinf_testdb]> SELECT * FROM gene WHERE chromosome="X" ORDER BY gene_name LIMIT 10;

exercise slide 66
	1) How many occurences does each biotype have in the gene table?
		MariaDB [bioinf_testdb]> SELECT biotype, count(*) FROM gene GROUP BY biotype;
	2) A mutation was found on chromosome 20, position 44002590. Which gene(s) have an overlap with this position?
		MariaDB [bioinf_testdb]> SELECT * FROM gene WHERE chromosome=20 AND 44002590 BETWEEN seq_region_start AND seq_region_end  LIMIT 10;
	3) Which chromosome has the second most genes?
		MariaDB [bioinf_testdb]> SELECT chromosome,count(*) as nrGenes FROM gene GROUP BY chromosome ORDER BY nrGenes desc LIMIT 1 OFFSET 1;
	4) On which chromosome strand lie the most genes?
		MariaDB [bioinf_testdb]> SELECT seq_region_strand, count(*) as nrGenes FROM gene GROUP BY seq_region_strand ORDER BY nrGenes desc LIMIT 1;
	5)For every chromosome, determine the # genes on EACH strand
		MariaDB [bioinf_testdb]> SELECT chromosome, seq_region_strand,count(seq_region_strand) FROM gene GROUP BY chromosome,seq_region_strand ORDER BY chromosome LIMIT 10;
	6) What is the most common biotype for novel transcripts?
		MariaDB [bioinf_testdb]> SELECT biotype,status,count(*) FROM transcript WHERE status="novel" GROUP BY biotype ORDER BY count(*) desc LIMIT 1;
	7) For each biotype with more than 10 known transcripts, give the lowest start position and the highest end position.
		MariaDB [bioinf_testdb]> SELECT biotype,count(*), min(seq_region_start ), max(seq_region_end ) FROM transcript WHERE status="known" GROUP BY biotype HAVING count(*) > 10 ORDER BY count(*) LIMIT 10;
	8) How many exons have a different end_phase than their current phase?
		MariaDB [bioinf_testdb]> SELECT count(*) FROM exon WHERE phase!=end_phase;
	8B) determine the nr of exons,For each combination where phase and end_phase are different
		MariaDB [bioinf_testdb]> SELECT phase, end_phase, count(*)  FROM exon WHERE phase!=end_phase GROUP BY phase,end_phase LIMIT 10;

exercise slide 79 (bioinf_testdb)
	1) Return a list of the 3 biotypes with the most genes. Which biotype is a close fourth?
	note: he wants two solutions
		A. MariaDB [bioinf_testdb]> SELECT biotype,count(*) as nr_genes FROM gene GROUP BY biotype ORDER BY nr_genes desc LIMIT 3;
		B. MariaDB [bioinf_testdb]> SELECT biotype,count(*) as nr_genes FROM gene GROUP BY biotype ORDER BY nr_genes desc LIMIT 1 OFFSET 3;
			in short: MariaDB [bioinf_testdb]> SELECT biotype,count(*) as nr_genes FROM gene GROUP BY biotype ORDER BY nr_genes desc LIMIT 3,1;
	2) Return a list of the number of genes per status
		MariaDB [bioinf_testdb]> SELECT status, count(*) as nr_genes FROM gene GROUP BY status;
	3) Combining the 2 previous results, which biotype is most known?
		MariaDB [bioinf_testdb]> SELECT biotype,status, count(*) as nr_genes FROM gene WHERE status="KNOWN" GROUP BY biotype ORDER BY nr_genes desc LIMIT 1;
	alternative: filter with HAVING clause after grouping on biotype and status
		MariaDB [bioinf_testdb]> SELECT biotype,status,count(*) as nr_genes FROM gene GROUP BY biotype,status HAVING status="known" ORDER BY nr_genes desc LIMIT 1;

excerside slide 95 (biobd2)
	For all rows in table “gene”, show:
		Organism name (genus + species)
		Class name
		Accession number of the gene
		Length of the gene
		Description of the gene
			MariaDB [biodb2]> SELECT concat(genus, " ",species) as orgName,class.name, acc,len,descr FROM gene JOIN modorg ON gene.mo_id=modorg.id JOIN class ON modorg.class_id=class.id;




